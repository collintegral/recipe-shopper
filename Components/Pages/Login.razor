@page "/login"
@inject Auth Auth
@inject IJSRuntime JS
@inject NavigationManager Navigation
@rendermode InteractiveServer

<h1>Login</h1>

<div class="form-container">
    <div class="form-section">
        <h3>Log In/Sign Up</h3>
        <div class="form-group">
            <label>
                Email
                <input type="email" @bind="email" class="form-control" />
            </label>
            <label>
                Password
                <input type="password" @bind="password" class="form-control" />
            </label>
        </div>
        <button class="btn btn-primary btn-login" @onclick="Submit">Log In/Sign Up</button>
        <p class="text-danger">@message</p>
    </div>
</div>

@code {
    private string email = "";
    private string password = "";
    private string message = "To test login app, use \"admin@test.com\" and \"password\"";

    private async Task Submit() {
        int result = await Auth.CheckLogin(email, password);
        if (result == 0) {
            Auth.LogIn(email);
            message = "Login successful; redirecting...";
            await Task.Delay(1000);
            Navigation.NavigateTo("/");
        } else if (result == 1) {
            message = "Invalid login. Please try again.";
        } else if (result == 2) {
            bool confirmed = await JS.InvokeAsync<bool>("confirm", $"Register new account with email: {email}?");
            if (confirmed)
            {
                await Auth.AddUserAsync(email, password);
                message = "Sign-up Successful; logged in. Redirecting...";
                Auth.LogIn(email);
                await Task.Delay(1000);
                Navigation.NavigateTo("/");
            }
            else
            {
                message = "Registration cancelled. Please login.";
            }
        }
    }
}